# Last updated on May 25st 2023
# Only update the information above when you're willing to update all the new rules.

disabled_rules:
  - line_length
  - force_cast
  - block_based_kvo
  - colon
  - identifier_name
  - redundant_string_enum_value
  - trailing_comma
  - legacy_hashing # hash(into:) doesn't seem to work?
  - fallthrough
  - inclusive_language
  - sorted_imports # SwiftFormat automatically fixes this for us, in a proper way (incl. in Unit Tests).
  - file_name # There were more false positives than good catches. We have to review for typos in file names on our own.

  # These are temporarily disabled and should be progressively enabled over time.
  - vertical_whitespace
  - control_statement # not sure, it may break stuff.
  - force_try
  - nesting
  - statement_position # I gotta check how it fixes this automatically
  - cyclomatic_complexity
  - large_tuple
  - multiple_closures_with_trailing_closure
  - weak_delegate
  - discarded_notification_center_observer
  - notification_center_detachment
  - operator_whitespace # Gotta check how this is verified actually...

  # Issues automatically fixed:
  # - legacy_hashing
  # - trailing_whitespace
  # - empty_parentheses_with_trailing_closure
  # - trailing_semicolon
  # - redundant_optional_initialization
  # - for_where
  # - void_return
  # - trailing_newline
  # - comma
  # - unused_optional_binding
  # - unused_closure_parameter
  # - legacy_constructor
  # - switch_case_alignment
  # - redundant_objc_attribute
  # - return_arrow_whitespace
  # - opening_brace
  # - redundant_discardable_let
  # - empty_enum_arguments
  # - mark
  # - closure_parameter_position
  # - leading_whitespace
  # - closing_brace
  # - implicit_getter
  # - syntactic_sugar

  # Soon
  - file_types_order # Enable soon
  - type_contents_order # Enable soon
  - private_outlet # Enable soon
  - private_action # Enable soon
  - modifier_order # Enable soon
  - explicit_type_interface # Enable soon
  - prohibited_interface_builder # Enable soon

  # Maybe
  - missing_docs # Enable in core
  - explicit_enum_raw_value # Enable in core
  - unowned_variable_capture # Not sure
  - strict_fileprivate # Maybe in the future
  - explicit_top_level_acl # May be useful for Libraries
  - discouraged_optional_collection # Maybe
  - trailing_closure # Maybe in the future
  - nsobject_prefer_isequal # Maybe

  # Don't enable these, they are undesired for our coding style:
  - implicit_return
  - array_init
  - required_deinit
  - vertical_whitespace_between_cases
  - vertical_parameter_alignment_on_call
  - switch_case_on_newline
  - redundant_type_annotation
  - raw_value_for_camel_cased_codable_enum
  - prefixed_toplevel_constant
  - pattern_matching_keywords
  - override_in_extension
  - nslocalizedstring_require_bundle
  - no_grouping_extension
  - multiline_parameters_brackets
  - multiline_arguments_brackets
  - let_var_whitespace
  - indentation_width
  - implicitly_unwrapped_optional
  - force_unwrapping
  - extension_access_modifier
  - explicit_acl
  - expiring_todo
  - no_extension_access_modifier
  - enum_case_associated_values_count
  - discouraged_optional_boolean
  - discouraged_object_literal
  - conditional_returns_on_newline
  - multiline_arguments
  - function_default_parameter_at_end
  - todo # This triggers warnings one very TO-DO in the project, regardless of whether they're being introduced now. We created a custom rule in Danger that will trigger just for new additions.

opt_in_rules:
  - attributes
  - closure_body_length
  - contains_over_first_not_nil
  - deployment_target
  - empty_count
  - first_where
  - joined_default_parameter
  - last_where
  - legacy_multiple
  - legacy_random
  - multiline_function_chains
  - nslocalizedstring_key
  - number_separator
  - object_literal
  - operator_usage_whitespace
  - overridden_super_call
  - prohibited_super_call
  - reduce_into
  - sorted_first_last
  - strong_iboutlet
  - toggle_bool
  - unneeded_parentheses_in_closure_argument
  - untyped_error_in_catch
  - vertical_whitespace_opening_braces
  - vertical_whitespace_closing_braces
  - xct_specific_matcher
  - unavailable_function
  - static_operator
  - single_test_class
  - required_enum_case
  - redundant_nil_coalescing
  - prefer_self_type_over_type_of_self
  - optional_enum_case_matching
  - multiline_parameters
  - multiline_literal_brackets
  - lower_acl_than_parent
  - literal_expression_end_indentation
  - identical_operands
  - flatmap_over_map_reduce
  - file_name_no_space
  - fatal_error_message
  - explicit_init
  # - empty_xctest_method # There's a bug on Xcode 12 triggering a false positive.
  - empty_string
  - empty_collection_literal
  - convenience_type
  - contains_over_range_nil_comparison
  - contains_over_filter_is_empty
  - contains_over_filter_count
  - collection_alignment
  - closure_spacing
  - closure_end_indentation
  - void_function_in_ternary
  - return_value_from_void_function

  # Find all the available rules by running:
  # swiftlint rules
included: # paths to include during linting. `--path` is ignored if present.
  # - Source
excluded: # paths to ignore during linting. Takes precedence over `included`.
  - Pods
  - "**/Pods"
  - .vendor
  - "**/.vendor"
  - .build
  - "**/.build"
  - "**/**/.build"
  - fastlane
  - env
analyzer_rules: # Rules run by `swiftlint analyze` (experimental)
  - explicit_self
  - unused_declaration
  - unused_import

# configurable rules can be customized from this configuration file
# binary rules can set their severity level
# force_cast: warning # implicitly
# force_try:
#   severity: warning # explicitly
# rules that have both warning and error levels, can set just the warning level
# implicitly
# line_length: 300
# they can set both implicitly with an array

closure_body_length:
  warning: 50
  error: 200

number_separator:
  minimum_length: 5

function_body_length:
  warning: 100
  error: 9001

type_body_length:
  warning: 3000
  error: 9001

file_length:
  warning: 2000
  error: 5000
# naming rules can set warnings/errors for min_length and max_length
# additionally they can set excluded names
type_name:
  min_length: 2 # only warning
  max_length: # warning and error
    warning: 40
    error: 50
  excluded: iPhone # excluded via string

identifier_name:
  min_length: 0
  max_length: 9001

# cyclomatic_complexity:
#   warning: 10
#   error: 9001

reporter: "xcode" # reporter type (xcode, json, csv, checkstyle, junit, html, emoji, sonarqube, markdown)